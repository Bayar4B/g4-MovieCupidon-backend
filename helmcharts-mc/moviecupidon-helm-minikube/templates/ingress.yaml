apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webui-ingress
  annotations:
    # kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # Add the following line (staging first for testing, then apply the prod issuer)
#    cert-manager.io/cluster-issuer: "letsencrypt-staging" # "letsencrypt-prod" 
spec:
  rules:
  - http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: webui-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lobby-ingress
  annotations:
    # kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - path: /api/lobby/v1(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: lobby-service
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-ingress
  annotations:
    # kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - path: /api/sample/v1(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: sample-service
            port:
              number: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chat-ingress
  annotations:
    # kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - path: /api/chat/v1(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: chat-service
            port:
              number: 8082
---
## Ingress certs command: kubectl create secret tls ingress-tls      --key movie.graved.ch.key     --cert fullchain.cer
